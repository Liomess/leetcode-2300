class Solution:
    def successfulPairs(self, spells: List[int], potions: List[int], success: int) -> List[int]:
        n=len(spells)
        potions.sort()
        p=len(potions)
        ans=[]
        for i in range(n):
            l=0
            r=p-1
            while l<=r:
                mid=l+(r-l)//2
                val=spells[i]*potions[mid]
                if val<success:
                    l=mid+1
                else:
                    r=mid-1
            
            ans.append(p-l)
        return ans
